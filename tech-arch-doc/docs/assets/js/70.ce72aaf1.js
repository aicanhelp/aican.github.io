(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{270:function(t,a,_){"use strict";_.r(a);var v=_(0),s=Object(v.a)({},(function(){var t=this,a=t.$createElement,_=t._self._c||a;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"mysql-数据类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#mysql-数据类型"}},[t._v("#")]),t._v(" MySQL - 数据类型")]),t._v(" "),_("h3",{attrs:{id:"整型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#整型"}},[t._v("#")]),t._v(" 整型")]),t._v(" "),_("p",[t._v("TINYINT, SMALLINT, MEDIUMINT, INT, BIGINT 分别使用 8, 16, 24, 32, 64 位存储空间，一般情况下越小的列越好。")]),t._v(" "),_("p",[t._v("INT(11) 中的数字只是规定了交互工具显示字符的个数，对于存储和计算来说是没有意义的。")]),t._v(" "),_("h3",{attrs:{id:"浮点数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浮点数"}},[t._v("#")]),t._v(" 浮点数")]),t._v(" "),_("p",[t._v("FLOAT 和 DOUBLE 为浮点类型，DECIMAL 为高精度小数类型。CPU 原生支持浮点运算，但是不支持 DECIMAl 类型的计算，因此 DECIMAL 的计算比浮点类型需要更高的代价。")]),t._v(" "),_("p",[t._v("FLOAT、DOUBLE 和 DECIMAL 都可以指定列宽，例如 DECIMAL(18, 9) 表示总共 18 位，取 9 位存储小数部分，剩下 9 位存储整数部分。")]),t._v(" "),_("h3",{attrs:{id:"字符串"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),_("p",[t._v("主要有 CHAR 和 VARCHAR 两种类型，一种是定长的，一种是变长的。")]),t._v(" "),_("p",[t._v("VARCHAR 这种变长类型能够节省空间，因为只需要存储必要的内容。但是在执行 UPDATE 时可能会使行变得比原来长，当超出一个页所能容纳的大小时，就要执行额外的操作。MyISAM 会将行拆成不同的片段存储，而 InnoDB 则需要分裂页来使行放进页内。")]),t._v(" "),_("p",[t._v("VARCHAR 会保留字符串末尾的空格，而 CHAR 会删除。")]),t._v(" "),_("h3",{attrs:{id:"时间和日期"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#时间和日期"}},[t._v("#")]),t._v(" 时间和日期")]),t._v(" "),_("p",[t._v("MySQL 提供了两种相似的日期时间类型：DATETIME 和 TIMESTAMP。")]),t._v(" "),_("h4",{attrs:{id:"_1-datetime"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-datetime"}},[t._v("#")]),t._v(" 1. DATETIME")]),t._v(" "),_("p",[t._v("能够保存从 1001 年到 9999 年的日期和时间，精度为秒，使用 8 字节的存储空间。")]),t._v(" "),_("p",[t._v("它与时区无关。")]),t._v(" "),_("p",[t._v("默认情况下，MySQL 以一种可排序的、无歧义的格式显示 DATETIME 值，例如“2008-01-16 22:37:08”，这是 ANSI 标准定义的日期和时间表示方法。")]),t._v(" "),_("h4",{attrs:{id:"_2-timestamp"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-timestamp"}},[t._v("#")]),t._v(" 2. TIMESTAMP")]),t._v(" "),_("p",[t._v("和 UNIX 时间戳相同，保存从 1970 年 1 月 1 日午夜（格林威治时间）以来的秒数，使用 4 个字节，只能表示从 1970 年 到 2038 年。")]),t._v(" "),_("p",[t._v("它和时区有关，也就是说一个时间戳在不同的时区所代表的具体时间是不同的。")]),t._v(" "),_("p",[t._v("MySQL 提供了 FROM_UNIXTIME() 函数把 UNIX 时间戳转换为日期，并提供了 UNIX_TIMESTAMP() 函数把日期转换为 UNIX 时间戳。")]),t._v(" "),_("p",[t._v("默认情况下，如果插入时没有指定 TIMESTAMP 列的值，会将这个值设置为当前时间。")]),t._v(" "),_("p",[t._v("应该尽量使用 TIMESTAMP，因为它比 DATETIME 空间效率更高。")])])}),[],!1,null,null,null);a.default=s.exports}}]);