(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{263:function(E,n,e){"use strict";e.r(n);var S=e(0),N=Object(S.a)({},(function(){var E=this,n=E.$createElement,e=E._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":E.$parent.slotKey}},[e("h2",{attrs:{id:"sql语言-sql语句练习"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sql语言-sql语句练习"}},[E._v("#")]),E._v(" SQL语言 - SQL语句练习")]),E._v(" "),e("h3",{attrs:{id:"插入数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#插入数据"}},[E._v("#")]),E._v(" 插入数据")]),E._v(" "),e("p",[E._v("use fuxi;")]),E._v(" "),e("p",[E._v("CREATE TABLE STUDENT\n(\nSNO       VARCHAR(3) NOT NULL,\nSNAME     VARCHAR(4) NOT NULL,\nSSEX      VARCHAR(2) NOT NULL,\nSBIRTHDAY DATETIME,\nCLASS     VARCHAR(5)\n);")]),E._v(" "),e("p",[E._v("CREATE TABLE COURSE\n(\nCNO   VARCHAR(5)  NOT NULL,\nCNAME VARCHAR(10) NOT NULL,\nTNO   VARCHAR(10) NOT NULL\n);")]),E._v(" "),e("p",[E._v("CREATE TABLE SCORE\n(\nSNO    VARCHAR(3)     NOT NULL,\nCNO    VARCHAR(5)     NOT NULL,\nDEGREE NUMERIC(10, 1) NOT NULL\n);")]),E._v(" "),e("p",[E._v("CREATE TABLE TEACHER\n(\nTNO       VARCHAR(3)  NOT NULL,\nTNAME     VARCHAR(4)  NOT NULL,\nTSEX      VARCHAR(2)  NOT NULL,\nTBIRTHDAY DATETIME    NOT NULL,\nPROF      VARCHAR(6),\nDEPART    VARCHAR(10) NOT NULL\n);")]),E._v(" "),e("p",[E._v("INSERT INTO STUDENT (SNO, SNAME, SSEX, SBIRTHDAY, CLASS) VALUES (108, '曾华'\n, '男', '1977-09-01', 95033);\nINSERT INTO STUDENT (SNO, SNAME, SSEX, SBIRTHDAY, CLASS) VALUES (105, '匡明'\n, '男', '1975-10-02', 95031);\nINSERT INTO STUDENT (SNO, SNAME, SSEX, SBIRTHDAY, CLASS) VALUES (107, '王丽'\n, '女', '1976-01-23', 95033);\nINSERT INTO STUDENT (SNO, SNAME, SSEX, SBIRTHDAY, CLASS) VALUES (101, '李军'\n, '男', '1976-02-20', 95033);\nINSERT INTO STUDENT (SNO, SNAME, SSEX, SBIRTHDAY, CLASS) VALUES (109, '王芳'\n, '女', '1975-02-10', 95031);\nINSERT INTO STUDENT (SNO, SNAME, SSEX, SBIRTHDAY, CLASS) VALUES (103, '陆君'\n, '男', '1974-06-03', 95031);")]),E._v(" "),e("p",[E._v("INSERT INTO COURSE (CNO, CNAME, TNO) VALUES ('3-105', '计算机导论', 825);\nINSERT INTO COURSE (CNO, CNAME, TNO) VALUES ('3-245', '操作系统', 804);\nINSERT INTO COURSE (CNO, CNAME, TNO) VALUES ('6-166', '数据电路', 856);\nINSERT INTO COURSE (CNO, CNAME, TNO) VALUES ('9-888', '高等数学', 100);")]),E._v(" "),e("p",[E._v("INSERT INTO SCORE (SNO, CNO, DEGREE) VALUES (103, '3-245', 86);\nINSERT INTO SCORE (SNO, CNO, DEGREE) VALUES (105, '3-245', 75);\nINSERT INTO SCORE (SNO, CNO, DEGREE) VALUES (109, '3-245', 68);\nINSERT INTO SCORE (SNO, CNO, DEGREE) VALUES (103, '3-105', 92);\nINSERT INTO SCORE (SNO, CNO, DEGREE) VALUES (105, '3-105', 88);\nINSERT INTO SCORE (SNO, CNO, DEGREE) VALUES (109, '3-105', 76);\nINSERT INTO SCORE (SNO, CNO, DEGREE) VALUES (101, '3-105', 64);\nINSERT INTO SCORE (SNO, CNO, DEGREE) VALUES (107, '3-105', 91);\nINSERT INTO SCORE (SNO, CNO, DEGREE) VALUES (101, '6-166', 85);\nINSERT INTO SCORE (SNO, CNO, DEGREE) VALUES (107, '6-106', 79);\nINSERT INTO SCORE (SNO, CNO, DEGREE) VALUES (108, '3-105', 78);\nINSERT INTO SCORE (SNO, CNO, DEGREE) VALUES (108, '6-166', 81);")]),E._v(" "),e("p",[E._v("INSERT INTO TEACHER (TNO, TNAME, TSEX, TBIRTHDAY, PROF, DEPART)\nVALUES (804, '李诚', '男', '1958-12-02', '副教授', '计算机系');\nINSERT INTO TEACHER (TNO, TNAME, TSEX, TBIRTHDAY, PROF, DEPART)\nVALUES (856, '张旭', '男', '1969-03-12', '讲师', '电子工程系');\nINSERT INTO TEACHER (TNO, TNAME, TSEX, TBIRTHDAY, PROF, DEPART)\nVALUES (825, '王萍', '女', '1972-05-05', '助教', '计算机系');\nINSERT INTO TEACHER (TNO, TNAME, TSEX, TBIRTHDAY, PROF, DEPART)\nVALUES (831, '刘冰', '女', '1977-08-14', '助教', '电子工程系');")]),E._v(" "),e("h3",{attrs:{id:"相关练习"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#相关练习"}},[E._v("#")]),E._v(" 相关练习")]),E._v(" "),e("p",[E._v("-- 1、 查询Student表中的所有记录的Sname、Ssex和Class列。\nselect\nSNAME,\nSSEX,\nCLASS\nfrom STUDENT;")]),E._v(" "),e("p",[E._v("-- 2、 查询教师所有的单位即不重复的Depart列。\nselect distinct DEPART\nfrom TEACHER1;")]),E._v(" "),e("p",[E._v("-- 3、 查询Student表的所有记录。\nselect *\nfrom STUDENT;")]),E._v(" "),e("p",[E._v("-- 4、 查询Score表中成绩在60到80之间的所有记录。\nselect *\nfrom SCORE\nwhere DEGREE > 60 and DEGREE < 80;")]),E._v(" "),e("p",[E._v("-- 5、 查询Score表中成绩为85，86或88的记录。\nselect *\nfrom SCORE\nwhere DEGREE = 85 or DEGREE = 86 or DEGREE = 88;")]),E._v(" "),e("p",[E._v("-- 6、 查询Student表中“95031”班或性别为“女”的同学记录。\nselect *\nfrom STUDENT\nwhere CLASS = '95031' or SSEX = '女';")]),E._v(" "),e("p",[E._v("-- 7、 以Class降序查询Student表的所有记录。\nselect *\nfrom STUDENT\norder by CLASS desc;")]),E._v(" "),e("p",[E._v("-- 8、 以Cno升序、Degree降序查询Score表的所有记录。\nselect *\nfrom SCORE\norder by CNO asc, DEGREE desc;")]),E._v(" "),e("p",[E._v("-- 9、 查询“95031”班的学生人数。\nselect count(*)\nfrom STUDENT\nwhere CLASS = '95031';")]),E._v(" "),e("p",[E._v("-- 10、查询Score表中的最高分的学生学号和课程号。\nselect\nsno,\nCNO\nfrom SCORE\nwhere DEGREE = (\nselect max(DEGREE)\nfrom SCORE\n);")]),E._v(" "),e("p",[E._v("-- 11、查询‘3-105’号课程的平均分。\nselect avg(DEGREE)\nfrom SCORE\nwhere CNO = '3-105';")]),E._v(" "),e("p",[E._v("-- 12、查询Score表中至少有5名学生选修的并以3开头的课程的平均分数。\nselect\navg(DEGREE),\nCNO\nfrom SCORE\nwhere cno like '3%'\ngroup by CNO\nhaving count(*) > 5;")]),E._v(" "),e("p",[E._v("-- 13、查询最低分大于70，最高分小于90的Sno列。\nselect SNO\nfrom SCORE\ngroup by SNO\nhaving min(DEGREE) > 70 and max(DEGREE) < 90;")]),E._v(" "),e("p",[E._v("-- 14、查询所有学生的Sname、Cno和Degree列。\nselect\nSNAME,\nCNO,\nDEGREE\nfrom STUDENT, SCORE\nwhere STUDENT.SNO = SCORE.SNO;")]),E._v(" "),e("p",[E._v("-- 15、查询所有学生的Sno、Cname和Degree列。\nselect\nSCORE.SNO,\nCNO,\nDEGREE\nfrom STUDENT, SCORE\nwhere STUDENT.SNO = SCORE.SNO;")]),E._v(" "),e("p",[E._v("-- 16、查询所有学生的Sname、Cname和Degree列。\nSELECT\nA.SNAME,\nB.CNAME,\nC.DEGREE\nFROM STUDENT A\nJOIN (COURSE B, SCORE C)\nON A.SNO = C.SNO AND B.CNO = C.CNO;")]),E._v(" "),e("p",[E._v("-- 17、查询“95033”班所选课程的平均分。\nselect avg(DEGREE)\nfrom SCORE\nwhere sno in (select SNO\nfrom STUDENT\nwhere CLASS = '95033');")]),E._v(" "),e("p",[E._v("-- 18、假设使用如下命令建立了一个grade表：\ncreate table grade (\nlow  numeric(3, 0),\nupp  numeric(3),\nrank char(1)\n);\ninsert into grade values (90, 100, 'A');\ninsert into grade values (80, 89, 'B');\ninsert into grade values (70, 79, 'C');\ninsert into grade values (60, 69, 'D');\ninsert into grade values (0, 59, 'E');\n-- 现查询所有同学的Sno、Cno和rank列。\nSELECT\nA.SNO,\nA.CNO,\nB.RANK\nFROM SCORE A, grade B\nWHERE A.DEGREE BETWEEN B.LOW AND B.UPP\nORDER BY RANK;")]),E._v(" "),e("p",[E._v("-- 19、查询选修“3-105”课程的成绩高于“109”号同学成绩的所有同学的记录。\nselect *\nfrom SCORE\nwhere CNO = '3-105' and DEGREE > ALL (\nselect DEGREE\nfrom SCORE\nwhere SNO = '109'\n);")]),E._v(" "),e("p",[E._v("set @@global.sql_mode = 'STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';\nset sql_mode = 'STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';")]),E._v(" "),e("p",[E._v("-- 20、查询score中选学一门以上课程的同学中分数为非最高分成绩的记录\nselect *\nfrom SCORE\nwhere DEGREE < (select MAX(DEGREE)\nfrom SCORE)\ngroup by SNO\nhaving count(*) > 1;")]),E._v(" "),e("p",[E._v("-- 21、查询成绩高于学号为“109”、课程号为“3-105”的成绩的所有记录。\n-- 同19")]),E._v(" "),e("p",[E._v("-- 22、查询和学号为108的同学同年出生的所有学生的Sno、Sname和Sbirthday列。\nselect\nSNO,\nSNAME,\nSBIRTHDAY\nfrom STUDENT\nwhere year(SBIRTHDAY) = (\nselect year(SBIRTHDAY)\nfrom STUDENT\nwhere SNO = '108'\n);")]),E._v(" "),e("p",[E._v("-- 23、查询“张旭“教师任课的学生成绩。\nselect *\nfrom SCORE\nwhere cno = (\nselect CNO\nfrom COURSE\ninner join TEACHER on COURSE.TNO = TEACHER.TNO and TNAME = '张旭'\n);")]),E._v(" "),e("p",[E._v("-- 24、查询选修某课程的同学人数多于5人的教师姓名。\nselect TNAME\nfrom TEACHER\nwhere TNO = (\nselect TNO\nfrom COURSE\nwhere CNO = (select CNO\nfrom SCORE\ngroup by CNO\nhaving count(SNO) > 5)\n);")]),E._v(" "),e("p",[E._v("-- 25、查询95033班和95031班全体学生的记录。\nselect *\nfrom STUDENT\nwhere CLASS in ('95033', '95031');")]),E._v(" "),e("p",[E._v("-- 26、查询存在有85分以上成绩的课程Cno.\nselect cno\nfrom SCORE\ngroup by CNO\nhaving MAX(DEGREE) > 85;")]),E._v(" "),e("p",[E._v("-- 27、查询出“计算机系“教师所教课程的成绩表。\nselect *\nfrom SCORE\nwhere CNO in (select CNO\nfrom TEACHER, COURSE\nwhere DEPART = '计算机系' and COURSE.TNO = TEACHER.TNO);")]),E._v(" "),e("p",[E._v("-- 28、查询“计算机系”与“电子工程系“不同职称的教师的Tname和Prof\nselect\ntname,\nprof\nfrom TEACHER\nwhere depart = '计算机系' and prof not in (\nselect prof\nfrom TEACHER\nwhere depart = '电子工程系'\n);")]),E._v(" "),e("p",[E._v("-- 29、查询选修编号为“3-105“课程且成绩至少高于选修编号为“3-245”的同学的Cno、Sno和Degree,并按Degree从高到低次序排序。\nselect\nCNO,\nSNO,\nDEGREE\nfrom SCORE\nwhere CNO = '3-105' and DEGREE > any (\nselect DEGREE\nfrom SCORE\nwhere CNO = '3-245'\n)\norder by DEGREE desc;")]),E._v(" "),e("p",[E._v("-- 30、查询选修编号为“3-105”且成绩高于选修编号为“3-245”课程的同学的Cno、Sno和Degree.\nSELECT *\nFROM SCORE\nWHERE DEGREE > ALL (\nSELECT DEGREE\nFROM SCORE\nWHERE CNO = '3-245'\n)\nORDER by DEGREE desc;")]),E._v(" "),e("p",[E._v("-- 31、查询所有教师和同学的name、sex和birthday.\nselect\nTNAME     name,\nTSEX      sex,\nTBIRTHDAY birthday\nfrom TEACHER\nunion\nselect\nsname     name,\nSSEX      sex,\nSBIRTHDAY birthday\nfrom STUDENT;")]),E._v(" "),e("p",[E._v("-- 32、查询所有“女”教师和“女”同学的name、sex和birthday.\nselect\nTNAME     name,\nTSEX      sex,\nTBIRTHDAY birthday\nfrom TEACHER\nwhere TSEX = '女'\nunion\nselect\nsname     name,\nSSEX      sex,\nSBIRTHDAY birthday\nfrom STUDENT\nwhere SSEX = '女';")]),E._v(" "),e("p",[E._v("-- 33、查询成绩比该课程平均成绩低的同学的成绩表。\nSELECT A.*\nFROM SCORE A\nWHERE DEGREE < (SELECT AVG(DEGREE)\nFROM SCORE B\nWHERE A.CNO = B.CNO);")]),E._v(" "),e("p",[E._v("-- 34、查询所有任课教师的Tname和Depart.\nselect\nTNAME,\nDEPART\nfrom TEACHER a\nwhere exists(select *\nfrom COURSE b\nwhere a.TNO = b.TNO);")]),E._v(" "),e("p",[E._v("-- 35、查询所有未讲课的教师的Tname和Depart.\nselect\nTNAME,\nDEPART\nfrom TEACHER a\nwhere tno not in (select tno\nfrom COURSE);")]),E._v(" "),e("p",[E._v("-- 36、查询至少有2名男生的班号。\nselect CLASS\nfrom STUDENT\nwhere SSEX = '男'\ngroup by CLASS\nhaving count(SSEX) > 1;")]),E._v(" "),e("p",[E._v('-- 37、查询Student表中不姓“王”的同学记录。\nselect *\nfrom STUDENT\nwhere SNAME not like "王%";')]),E._v(" "),e("p",[E._v("-- 38、查询Student表中每个学生的姓名和年龄。\nselect\nSNAME,\nyear(now()) - year(SBIRTHDAY)\nfrom STUDENT;")]),E._v(" "),e("p",[E._v("-- 39、查询Student表中最大和最小的Sbirthday日期值。\nselect min(SBIRTHDAY) birthday\nfrom STUDENT\nunion\nselect max(SBIRTHDAY) birthday\nfrom STUDENT;")]),E._v(" "),e("p",[E._v("-- 40、以班号和年龄从大到小的顺序查询Student表中的全部记录。\nselect *\nfrom STUDENT\norder by CLASS desc, year(now()) - year(SBIRTHDAY) desc;")]),E._v(" "),e("p",[E._v("-- 41、查询“男”教师及其所上的课程。\nselect *\nfrom TEACHER, COURSE\nwhere TSEX = '男' and COURSE.TNO = TEACHER.TNO;")]),E._v(" "),e("p",[E._v("-- 42、查询最高分同学的Sno、Cno和Degree列。\nselect\nsno,\nCNO,\nDEGREE\nfrom SCORE\nwhere DEGREE = (select max(DEGREE)\nfrom SCORE);")]),E._v(" "),e("p",[E._v("-- 43、查询和“李军”同性别的所有同学的Sname.\nselect sname\nfrom STUDENT\nwhere SSEX = (select SSEX\nfrom STUDENT\nwhere SNAME = '李军');")]),E._v(" "),e("p",[E._v("-- 44、查询和“李军”同性别并同班的同学Sname.\nselect sname\nfrom STUDENT\nwhere (SSEX, CLASS) = (select\nSSEX,\nCLASS\nfrom STUDENT\nwhere SNAME = '李军');")]),E._v(" "),e("p",[E._v("-- 45、查询所有选修“计算机导论”课程的“男”同学的成绩表\nselect *\nfrom SCORE, STUDENT\nwhere SCORE.SNO = STUDENT.SNO and SSEX = '男' and CNO = (\nselect CNO\nfrom COURSE\nwhere CNAME = '计算机导论');")]),E._v(" "),e("p",[E._v("-- 46、使用游标方式来同时查询每位同学的名字，他所选课程及成绩。")]),E._v(" "),e("p",[E._v("declare\ncursor student_cursor is\nselect S.SNO,S.SNAME,C.CNAME,SC.DEGREE as DEGREE\nfrom STUDENT S, COURSE C, SCORE SC\nwhere S.SNO=SC.SNO\nand SC.CNO=C.CNO;")]),E._v(" "),e("p",[E._v("student_row student_cursor%ROWTYPE;")]),E._v(" "),e("p",[E._v("begin\nopen student_cursor;\nloop\nfetch student_cursor INTO student_row;\nexit when student_cursor%NOTFOUND;\ndbms_output.put_line( student_row.SNO || '' ||")]),E._v(" "),e("p",[E._v("student_row.SNAME|| '' || student_row.CNAME || '' ||")]),E._v(" "),e("p",[E._v("student_row.DEGREE);\nend loop;\nclose student_cursor;\nEND;\n/")]),E._v(" "),e("p",[E._v("-- 47、 声明触发器指令，每当有同学转换班级时执行触发器显示当前和之前所在班级。")]),E._v(" "),e("p",[E._v("CREATE OR REPLACE TRIGGER display_class_changes\nAFTER DELETE OR INSERT OR UPDATE ON student\nFOR EACH ROW\nWHEN (NEW.sno > 0)")]),E._v(" "),e("p",[E._v("BEGIN")]),E._v(" "),e("p",[E._v("dbms_output.put_line('Old class: ' || :OLD.class);\ndbms_output.put_line('New class: ' || :NEW.class);\nEND;\n/")]),E._v(" "),e("p",[E._v("Update student\nset class=95031\nwhere sno=109;")]),E._v(" "),e("p",[E._v("-- 48、 删除已设置的触发器指令")]),E._v(" "),e("p",[E._v("DROP TRIGGER display_class_changes;")])])}),[],!1,null,null,null);n.default=N.exports}}]);